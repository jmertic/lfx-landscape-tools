name: Update Landscape from LFX
description: Update the given landscape from LFx
inputs:
  project_processing:
    description: "Indicate for project processing, if they should be 'rebuild' or 'sync' ( or 'skip' to not build projects )"
    default: "sync"
  configfile:
    description: "Filename for the config file ( defaults to config.yml )"
    default: "config.yml"
runs:
  using: composite
  steps:
    - name: Install cairo
      uses: awalsh128/cache-apt-pkgs-action@7ca5f46d061ad9aa95863cd9b214dd48edef361d # v1.5.0
      with:
        packages: libcairo2-dev pkg-config python3-dev
        version: 1.0
    - name: Checkout landscape
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.1.7@v4
      with:
        token: ${{ env.token }}
        repository: ${{ env.repository }}
        ref: ${{ env.ref }}
        path: landscape
    - name: Checkout landscape-tools
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.1.7@v4
      with:
        token: ${{ env.token }}
        repository: jmertic/lfx-landscape-tools
        path: landscape-tools
    - name: Set up Python 3.x
      uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
      with:
        python-version: '3.x'
    - name: Install poetry
      uses: abatilo/actions-poetry@3765cf608f2d4a72178a9fc5b918668e542b89b1 # v4.0.0
    - name: Install dependencies
      shell: bash
      working-directory: ./landscape-tools
      run: poetry install
    - name: Build members from LFX
      working-directory: ./landscape-tools
      shell: bash
      run: poetry run lfx_landscape build_members -c ../landscape/$CONFIGFILE
      env:
        GITHUB_TOKEN: ${{ env.token }}
        GH_TOKEN: ${{ env.token }}
        CONFIGFILE: ${{ inputs.configfile }}
    - name: Rebuild projects from LFX and other sources
      if: ${{ inputs.project_processing == 'rebuild' }}
      working-directory: ./landscape-tools
      shell: bash
      run: poetry run lfx_landscape build_projects -c ../landscape/$CONFIGFILE
      env:
        GITHUB_TOKEN: ${{ env.token }}
        GH_TOKEN: ${{ env.ghid_token }}
        CONFIGFILE: ${{ inputs.configfile }}
    - name: Sync projects from LFX and other sources
      if: ${{ inputs.project_processing == 'sync' }}
      working-directory: ./landscape-tools
      shell: bash
      run: poetry run lfx_landscape sync_projects -c ../landscape/$CONFIGFILE
      env:
        GITHUB_TOKEN: ${{ env.token }}
        GH_TOKEN: ${{ env.token }}
        CONFIGFILE: ${{ inputs.configfile }}
    - name: Save missing.csv file
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        name: debug.log 
        path: ./landscape-tools/debug.log
    - name: Validate landscape2 data
      uses: cncf/landscape2-validate-action@7f299c46e9b03b4e8bc2896882734fb0b0756b37 # v2.0.0
      with:
        target_kind: data
        target_path: ./landscape/landscape.yml
    - name: Checkout landscapeapp
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.1.7@v4
      if: ${{ hashFiles('./landscape/settings.yml') != '' }}
      with:
        repository: cncf/landscapeapp
        path: landscapeapp
    - name: Setup node
      uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
      if: ${{ hashFiles('./landscape/settings.yml') != '' }}
      with:
        node-version: '18'
    - name: Cleanup YAML files
      if: ${{ hashFiles('./landscape/settings.yml') != '' }}
      working-directory: ./landscapeapp
      shell: bash
      run: |
        node tools/removePuppeteer
        npm install
        PROJECT_PATH=../landscape node tools/removeQuotes
        PROJECT_PATH=../landscape node tools/pruneExtraEntries
    - name: Get current date
      id: date
      uses: Kaven-Universe/github-action-current-date-time@f2c12d90cff9c3e7b1f50430886e632fe31fcee1 # v1.4.0
      with:
        format: "YYYY-MM-DD"
    - name: Create Pull Request
      uses: peter-evans/create-pull-request@271a8d0340265f705b14b6d32b9829c1cb33d45e # v7.0.8
      with:
        token: ${{ env.token }}
        branch-suffix: timestamp
        path: ./landscape
        title: "Update Landscape from LFX ${{ steps.date.outputs.time }}"
        labels: automated-build
        commit-message: Update Landscape from LFX
        signoff: true

